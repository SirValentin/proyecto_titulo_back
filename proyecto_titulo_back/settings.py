"""
Django settings for proyecto_titulo_back project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1c#_+pof=e3w3t3o)k57*i)3$7c$+84)j32j(=86vmp4h9^9c+"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

USER_CREATE_PASSWORD_RETYPE = False


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "djoser",
    "corsheaders",
    "planificador",
]

CORS_ALLOWED_ORIGINS = [config("CORS_ORIGIN_WHITELIST")]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    ),
}

ROOT_URLCONF = "proyecto_titulo_back.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "proyecto_titulo_back.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": config("DB_NAME", default="planificador"),
        "USER": config("DB_USER", default=""),
        "PASSWORD": config("DB_PASS", default=""),
        "HOST": config("DB_HOST", default="localhost"),
        "PORT": config("DB_PORT", default=""),
    }
}

AUTH_USER_MODEL = "planificador.User"
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# DJOSER = {
# "PERMISSIONS": {
#     "activation": ["rest_framework.permissions.AllowAny"],
#     "password_reset": ["rest_framework.permissions.AllowAny"],
#     "password_reset_confirm": ["rest_framework.permissions.AllowAny"],
#     "set_password": ["djoser.permissions.CurrentUserOrAdmin"],
#     "username_reset": ["rest_framework.permissions.AllowAny"],
#     "username_reset_confirm": ["rest_framework.permissions.AllowAny"],
#     "set_username": ["djoser.permissions.CurrentUserOrAdmin"],
#     "user_create": ["database.permissions.CompanyAuthorizedOnly"],
#     "user_delete": ["rest_framework.permissions.IsAdminUser"],
#     "user": ["djoser.permissions.CurrentUserOrAdmin"],
#     "user_list": ["djoser.permissions.CurrentUserOrAdmin"],
#     "token_create": ["rest_framework.permissions.AllowAny"],
#     "token_destroy": ["rest_framework.permissions.IsAuthenticated"],
# },
# "HIDE_USERS": True,
# "PASSWORD_RESET_CONFIRM_URL": "password/reset/confirm/{uid}/{token}",
# "USER_CREATE_PASSWORD_RETYPE": True,
# "PASSWORD_RESET_CONFIRM_RETYPE": True,
# "USERNAME_RESET_CONFIRM_URL": "#/email/reset/confirm/{uid}/{token}",
# "ACTIVATION_URL": "user/activate/{uid}/{token}",
# "SEND_ACTIVATION_EMAIL": True,
# "SERIALIZERS": {
# "current_user": "database.serializers.user.CurrentUserSerializer",
# "user_create_password_retype": "database.serializers.employee.SignUpUserSerializer",
# },
# "EMAIL": {"password_reset": "database.email.PasswordResetEmail", "activation": "database.email.ActivationEmail"},
# }
